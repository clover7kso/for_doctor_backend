generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url = "***"
}

model User {
  id        String   @id
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt @default(now())

  avatar         String?
  password       String
  name           String
  phone          String        @unique
  medical_cate   String?
  medical_id     String?
  medical_certi  String?
  permit         Boolean       @default(false)
  email_check    Boolean       @default(false)
  registerSecret String        @default("")
  likeProducts   likeProduct[]

  Post    Post[]    @relation("PostAuthor")
  Comment Comment[] @relation("CommentAuthor")
  inbox   Message[] @relation("MessageReceiver")
  outbox  Message[] @relation("MessageSender")

  @@unique([medical_id, medical_cate])
}

model Post {
  id        String   @id @default(cuid())
  user      User     @relation(name: "PostAuthor", fields: [userId], references: [id])
  userId    String
  updatedAt DateTime @updatedAt @default(now())
  createdAt DateTime @default(now())

  category   String
  title      String
  content    String
  views      Int
  todayViews Int
  comments   Comment[]
}

model Comment {
  id        String   @id @default(cuid())
  user      User     @relation(name: "CommentAuthor", fields: [userId], references: [id])
  userId    String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt @default(now())

  text   String
  post   Post   @relation(fields: [postId], references: [id])
  postId String
}

model Product {
  id        String    @id @default(cuid())
  updatedAt DateTime  @updatedAt @default(now())
  createdAt DateTime  @default(now())
  expireAt  DateTime?

  doctor       String?
  category     String
  sampleImages sampleImage
  detailImages detailImage[]
  title        String
  content      String        @default("")
  views        Int
  calls        Int
  ad           Boolean
  company      String
  phone        String
  likeProduct  likeProduct[]
}

model sampleImage {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt @default(now())

  url       String
  productId String
  product   Product @relation(fields: [productId], references: [id])
}

model detailImage {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt @default(now())

  url       String
  productId String
  product   Product @relation(fields: [productId], references: [id])
}

model likeProduct {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt @default(now())

  userId    String
  user      User    @relation(fields: [userId], references: [id])
  productId String
  product   Product @relation(fields: [productId], references: [id])
}

model Message {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  text     String
  fromname String
  touserId String
  from     User   @relation("MessageSender", fields: [fromname], references: [id])
  to       User   @relation("MessageReceiver", fields: [touserId], references: [id])
}
