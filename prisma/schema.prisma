generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = "mysql://DevWoony:rkdtjddns!23@for-doctor.cqtapbmn5giq.ap-northeast-2.rds.amazonaws.com:3306/Doctor"
}

model User {
  id        String   @id
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt @default(now())

  avatar         String?
  password       String
  nickname       String  @unique
  email          String  @unique
  medical_id     String
  medical_cate   String
  medical_certi  String
  permit         Boolean @default(false)
  email_check    Boolean @default(false)
  registerSecret String  @default("")
  likes          Like[]

  Post    Post[]    @relation("PostAuthor")
  Comment Comment[] @relation("CommentAuthor")
  inbox   Message[] @relation("MessageReceiver")
  outbox  Message[] @relation("MessageSender")

  @@unique([medical_id, medical_cate])
}

model Post {
  id           String   @id @default(cuid())
  user         User     @relation(name: "PostAuthor", fields: [userNickname], references: [nickname])
  userNickname String   @default("익명")
  updatedAt    DateTime @updatedAt @default(now())
  createdAt    DateTime @default(now())

  category String
  title    String
  content  String
  views    Int
  comments Comment[]
}

model Comment {
  id           String   @id @default(cuid())
  user         User     @relation(name: "CommentAuthor", fields: [userNickname], references: [nickname])
  userNickname String   @default("익명")
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt @default(now())

  text   String
  post   Post   @relation(fields: [postId], references: [id])
  postId String
}

model Product {
  id        String    @id @default(cuid())
  updatedAt DateTime  @updatedAt @default(now())
  createdAt DateTime  @default(now())
  expireAt  DateTime?

  productImage productImage
  detailImages detailImage[]
  title        String
  content      String        @default("")
  views        Int
  tag          String
  Like         Like[]
}

model productImage {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt @default(now())

  url       String
  productId String  @unique
  product   Product @relation(fields: [productId], references: [id])
}

model detailImage {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt @default(now())

  url       String
  productId String
  product   Product @relation(fields: [productId], references: [id])
}

model Like {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt @default(now())

  userId    String
  user      User    @relation(fields: [userId], references: [id])
  productId String
  product   Product @relation(fields: [productId], references: [id])
}

model Message {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  text           String
  fromNickname   String
  toUserNickname String
  from           User   @relation("MessageSender", fields: [fromNickname], references: [nickname])
  to             User   @relation("MessageReceiver", fields: [toUserNickname], references: [nickname])
}
